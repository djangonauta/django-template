services:
  redis:
    image: redis:7.4.0
    container_name: redis
    volumes:
      - /var/lib/docker/volumes/redis:/data
    ports:
      - 6379:6379

  postgres:
    image: postgres:16.4
    container_name: postgres
    env_file:
      - ./docker.cfg/docker.env
    volumes:
      - ./docker.cfg/init-database.sh:/docker-entrypoint-initdb.d/init-database.sh
      - /var/lib/docker/volumes/postgresql:/var/lib/postgresql/data
    ports:
      - 5432:5432

  rabbitmq:
    image: rabbitmq:3.13.6
    container_name: rabbitmq
    env_file:
      - ./docker.cfg/docker.env
    volumes:
      - /var/lib/docker/volumes/rabbitmq:/var/lib/rabbitmq
    ports:
      - 5672:5672
      - 15672:15672
    healthcheck:
      test: [ "CMD", "rabbitmqctl", "status"]
      interval: 5s
      timeout: 100s
      retries: 19

  celery-worker:
    build:
      context: .
      dockerfile: ./Dockerfile.dev
    container_name: celery-worker
    env_file:
      - ./docker.cfg/docker.env
    environment:
      - POETRY_VIRTUALENVS_PATH=/usr/envs
    volumes:
      - .:/usr/app
      - /usr/envs
    depends_on:
      rabbitmq:
        condition: service_healthy
    entrypoint: ./docker.cfg/celery.dev.py

  app:
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: app
    env_file:
      - ./docker.cfg/docker.env
    environment:
      - POETRY_VIRTUALENVS_PATH=/usr/envs
    ports:
      - 8000:8000
    volumes:
      - .:/usr/app
      - /usr/envs
    depends_on:
      rabbitmq:
        condition: service_healthy
    entrypoint: ./docker.cfg/dev.py
