user root www-data;
worker_processes auto;
pid /run/nginx.pid;
include /etc/nginx/modules-enabled/*.conf;

events {
    worker_connections 1024;
    use epoll; # linux 2.6+
    # multi_accept on;
}

http {
    # proxy_cache_path /var/cache/nginx levels=1:2 keys_zone=one:8m max_size=3000m inactive=600m;

    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;

    server_tokens off;

    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    keepalive_timeout 65;

    ssl_protocols TLSv1.2 TLSv1.3; # Dropping SSLv3, ref: POODLE
    ssl_prefer_server_ciphers on;

    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;
    log_not_found off;

    gzip on;
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_buffers 16 8k;
    gzip_http_version 1.1;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

    # include /etc/nginx/conf.d/*.conf;

    server {
        # if no Host match, close the connection to prevent host spoofing
        listen 80 default_server;
        return 444;
    }

    server {
        listen 80 deferred;
        server_name localhost;
        return 301 https://$host$request_uri;
    }

    server {
        client_max_body_size 10M;
        listen 443 ssl;
        listen [::]:443 ssl;

        server_name localhost;

        ssl_certificate /etc/nginx/ssl/cert.pem;
        ssl_certificate_key /etc/nginx/ssl/key.pem;
        ssl_password_file /etc/nginx/ssl/pass;

        location /assets {
            access_log off;
            alias /usr/app/assets;
        }

        location /downloads {
            gzip off;
            alias /usr/app/downloads;
        }

        location / {
            proxy_http_version 1.1;
            proxy_redirect off;
            # proxy_buffering off; # async workers needed

            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-NginX-Proxy true;

            proxy_cache_bypass $http_upgrade;
            proxy_pass http://django-upstream;
        }
    }

    upstream django-upstream {
        least_conn;
        keepalive 64;
        server app:8000;

        # server 172.31.9.239:8000 weight=10 max_fails=3 fail_timeout=30s;
        # server 172.31.9.234:8000 weight=10 max_fails=3 fail_timeout=30s;
        # server 172.31.1.53:8000 weight=10 max_fails=3 fail_timeout=30s;
    }
}
